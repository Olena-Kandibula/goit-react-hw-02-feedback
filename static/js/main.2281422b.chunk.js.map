{"version":3,"sources":["components/section/Section.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/statistics/notification/Notification.js","App.js","reportWebVitals.js","index.js","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","container","Object","keys","map","option","type","name","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","generateRandomColor","capsCoffee","Array","from","length","u","i","list","item","description","color","size","cap","capsContainer","Notification","message","App","state","event","dataEvent","target","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","ceil","random","toString","substring","toUpperCase","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2281422b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2> {title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import s from '../feedbackOptions/FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({\n  options,\n  onLeaveFeedback\n}) => {\n  \n  return (\n    <div className={s.container}>\n      {Object.keys(options).map(option => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={s.button}\n          onClick={onLeaveFeedback}\n          \n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import s from '../statistics/Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nimport { GiCoffeeCup } from \"react-icons/gi\";\nimport { BiUpsideDown } from \"react-icons/bi\";\nimport {BiSmile} from \"react-icons/bi\";\nimport {BiMehBlank} from \"react-icons/bi\";\n\nconst Statistics = ({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n    generateRandomColor\n}) => {\n\n    const capsCoffee = Array.from({ length: total - 1 }).map((u, i) => i);\n    \n        \n    return (\n      \n        \n      <ul className={s.list}>\n          \n      <li className={s.item}>\n        <span className={s.description}>Good:</span>\n        <span>{good}</span>\n        <span><BiSmile color=\"green\" size='24px'/></span>\n        </li>\n          \n      <li className={s.item}>\n        <span className={s.description}>Neutral:</span>\n        <span>{neutral}</span>\n        <span><BiMehBlank color=\"grey\" size='24px'/></span>\n        </li>\n          \n      <li className={s.item}>\n        <span className={s.description}>Bad:</span>\n        <span>{bad}</span>\n        <span><BiUpsideDown color=\"red\" size='24px'/></span>\n          </li>\n          \n      <li className={s.item}>\n        <span className={s.description}>Total:</span>\n        <span>{total}</span>              \n              < GiCoffeeCup color=\"green\" size='24px'    \n              />\n          </li>\n\n          <li className={s.item}>\n            {capsCoffee.map(cap => (\n                <span className={s.capsContainer} key={cap}>\n                \n                    < GiCoffeeCup                     \n                        color={generateRandomColor()}\n                        size='30px' margin-right=\"2px\" />\n                </span>\n            ))}\n    </li>\n\n         \n\n      <li className={s.item}>\n        <span>Positive feedback:</span>\n        <span>{positivePercentage} %</span>\n      </li>\n    </ul>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\n\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nimport Section from './components/section';\r\nimport FeedbackOptions from './components/feedbackOptions';\r\nimport Statistics from './components/statistics';\r\nimport Notification from './components/statistics/notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  \r\n\r\n  onLeaveFeedback = event => {\r\n    const dataEvent = event.target.name;\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        [dataEvent]: prevState[dataEvent] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = Object.values(this.state).reduce(\r\n      (acc, value) => acc + value,\r\n      0,\r\n    );\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positiveFeedbackPercentage =\r\n      (this.state.good * 100) / this.countTotalFeedback();\r\n    return Math.ceil(positiveFeedbackPercentage);\r\n  };\r\n\r\n    generateRandomColor()  {\r\n       return   '#' +\r\n                (Math.random().toString(16) + '000000')\r\n                  .substring(2, 8)\r\n                  .toUpperCase()\r\n              }\r\n  \r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n    const { neutral } = this.state;\r\n    const { bad } = this.state;\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n              generateRandomColor = {this.generateRandomColor}\r\n              ></Statistics>\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3CfhR\",\"item\":\"Statistics_item__2l2Ra\",\"description\":\"Statistics_description__2TEvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2tPZL\",\"button\":\"FeedbackOptions_button__1VbJ6\"};"],"sourceRoot":""}